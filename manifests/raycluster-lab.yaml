---
# Lab RayCluster Instance
#
# Manifest to deploy the general use RayCluster into the Lab RKE2 instance.
#
# This cluster is inteneded for testing and development of HPC and AI
# workloads and is limited to just three nodes with basic CPU and memory
# resources. For large workloads, the 
#
apiVersion: ray.io/v1
kind: RayCluster
metadata:
  name: raycluster
  namespace: lab-cluster
  labels:
    app.kubernetes.io/name: kuberay
    app.kubernetes.io/instance: ray-cluster
    app.kubernetes.io/component: ray-cluster
    app.kubernetes.io/part-of: kuberay-lab
spec:
  rayVersion: "2.40.0"
  enableInTreeAutoscaling: false
  autoscalerOptions: {}
  headGroupSpec:
    rayStartParams:
      dashboard-host: 0.0.0.0
    serviceType: LoadBalancer
    template:
      metadata:
        annotations: {}
        labels:
          app.kubernetes.io/name: kuberay
          app.kubernetes.io/instance: ray-cluster
          app.kubernetes.io/component: ray-cluster-head
          app.kubernetes.io/part-of: kuberay-lab
      spec:
        affinity: {}
        containers:
          - image: rayproject/ray:2.40.0
            imagePullPolicy: IfNotPresent
            name: ray-head
            resources:
              limits:
                cpu: '4'
                memory: 8G
              requests:
                cpu: '4'
                memory: 8G
              lifecycle:
                preStop:
                  exec:
                    command: ["/bin/sh","-c","ray stop"]
            securityContext: {}
            volumeMounts:
              - mountPath: /tmp/ray
                name: log-volume
        imagePullSecrets: []
        nodeSelector: {}
        tolerations: []
        volumes:
          - emptyDir: {}
            name: log-volume
  workerGroupSpecs:
    - groupName: workergroup
      maxReplicas: 5
      minReplicas: 1
      numOfHosts: 1
      rayStartParams: {}
      replicas: 1
      template:
        metadata:
          annotations: {}
          labels:
            app.kubernetes.io/name: kuberay
            app.kubernetes.io/instance: ray-cluster
            app.kubernetes.io/component: ray-cluster-worker
            app.kubernetes.io/part-of: kuberay-lab
        spec:
          affinity: {}
          containers:
            - image: rayproject/ray:2.40.0
              imagePullPolicy: IfNotPresent
              name: ray-worker
              resources:
                limits:
                  cpu: '4'
                  memory: 8G
                requests:
                  cpu: '4'
                  memory: 8G
              lifecycle:
                preStop:
                  exec:
                    command: ["/bin/sh","-c","ray stop"]
              securityContext: {}
              volumeMounts:
                - mountPath: /tmp/ray
                  name: log-volume
          imagePullSecrets: []
          nodeSelector: {}
          tolerations: []
          volumes:
            - emptyDir: {}
              name: log-volume
